# code: language=ansible
---
- name: Make ~/.aws directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "~/.aws"
  register: result
  ignore_errors: true

- name: Touch AWS Config files
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
    mode: '0600'
  loop:
    - "~/.aws/config"
    - "~/.aws/credentials"
  when: aws_id is defined and aws_key is defined

- name: Copy file with ssh
  ansible.builtin.blockinfile:
    path: ~/.aws/config
    block: |
      [profile {{ env_profile }}]
      region = ap-northeast-2
      output = json
  when: env_profile is defined
  register: result

- name: Add AWS Credentials
  ansible.builtin.blockinfile:
    path: ~/.aws/credentials
    block: |
      [{{ env_profile }}]
      aws_access_key_id = {{ aws_id }}
      aws_secret_access_key = {{ aws_key }}
  when: aws_id is defined and aws_key is defined
  register: result

- name: Print variables
  ansible.builtin.debug:
    var: result

- name: Replace AWS Environment [DEV]
  become: true
  become_user: root
  ansible.builtin.lineinfile:
    path: "{{ zshenv }}"
    regexp: '^(#)?(.)?export {{ item.env }}_AWS_ID'
    line: 'export {{ item.env }}_AWS_ID="{{ item.aws_id if item.aws_id else "# export " + item.env + "_AWS_ID=__YOUR_ID__" }}"'
    state: present
    backup: true
  loop:
    - { env: 'DEV', aws_id: '{{ dev_aws_id | default("") }}' }
    - { env: 'STG', aws_id: '{{ stg_aws_id | default("") }}' }
    - { env: 'PRD', aws_id: '{{ prd_aws_id | default("") }}' }
  when: item.aws_id | default("") != ""
  register: result
  tags:
    - dev
    - stg
    - prd

# - name: Print variables
#   ansible.builtin.debug:
#     var: result
